-- MySQL Script generated by MySQL Workbench
-- Thu May 10 22:10:28 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema HRAS
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema HRAS
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `HRAS` DEFAULT CHARACTER SET utf8 ;
USE `HRAS` ;

-- -----------------------------------------------------
-- Table `HRAS`.`emp_title`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`emp_title` (
  `id` INT(5) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '职称ID',
  `name` VARCHAR(10) NOT NULL COMMENT '职称名',
  `level` INT NOT NULL COMMENT '职称级别',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`dict_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`dict_type` (
  `id` INT(5) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '字典类型ID',
  `name` VARCHAR(40) NOT NULL COMMENT '类型名',
  `parent_id` INT(5) UNSIGNED ZEROFILL NULL COMMENT '父字典类型ID(外键)',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `parent_id_idx` (`parent_id` ASC),
  CONSTRAINT `type_type`
    FOREIGN KEY (`parent_id`)
    REFERENCES `HRAS`.`dict_type` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`dict_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`dict_info` (
  `id` INT(10) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '字典项ID',
  `dict_code` VARCHAR(20) NOT NULL COMMENT '查询码',
  `value` VARCHAR(50) NOT NULL COMMENT '字典项值',
  `type_id` INT(5) UNSIGNED ZEROFILL NOT NULL COMMENT '所属字典类型ID(外键)',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `dict_code_UNIQUE` (`dict_code` ASC),
  INDEX `dict_type_idx` (`type_id` ASC),
  CONSTRAINT `dict_type`
    FOREIGN KEY (`type_id`)
    REFERENCES `HRAS`.`dict_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`emp_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`emp_info` (
  `id` INT(10) ZEROFILL UNSIGNED NOT NULL COMMENT '员工ID',
  `password` CHAR(32) NOT NULL COMMENT '用户密码',
  `email` VARCHAR(30) NOT NULL COMMENT '注册email',
  `phone_number` CHAR(11) NOT NULL COMMENT '电话号码',
  `name` VARCHAR(20) NOT NULL COMMENT '员工姓名',
  `birthday` DATE NOT NULL COMMENT '生日',
  `time_register` TIMESTAMP NOT NULL COMMENT '注册时间',
  `political` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '政治面貌(字典)',
  `health` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '健康状况(字典)',
  `title` INT(5) UNSIGNED ZEROFILL NOT NULL COMMENT '职称(外键)',
  `dep_id` INT(4) ZEROFILL UNSIGNED NULL COMMENT '所属部门ID(外键)',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC),
  INDEX `dep_id_idx` (`dep_id` ASC),
  INDEX `emp_title_idx` (`title` ASC),
  INDEX `emp_dict_idx` (`political` ASC),
  INDEX `emp_dict_health_idx` (`health` ASC),
  CONSTRAINT `emp_dep`
    FOREIGN KEY (`dep_id`)
    REFERENCES `HRAS`.`com_department` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `emp_title`
    FOREIGN KEY (`title`)
    REFERENCES `HRAS`.`emp_title` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `emp_dict_political`
    FOREIGN KEY (`political`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `emp_dict_health`
    FOREIGN KEY (`health`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`com_department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`com_department` (
  `id` INT(4) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '部门ID',
  `name` VARCHAR(40) NOT NULL COMMENT '部门名',
  `addr` VARCHAR(50) NULL COMMENT '部门地址',
  `info` VARCHAR(100) NULL DEFAULT '无' COMMENT '部门信息',
  `mgr` INT(10) ZEROFILL UNSIGNED NOT NULL COMMENT '部门经理(外键)',
  `phone_number` VARCHAR(11) NULL,
  `parent_dep` INT(4) UNSIGNED ZEROFILL NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Dep_name_UNIQUE` (`name` ASC),
  INDEX `mgr_idx` (`mgr` ASC),
  INDEX `dep_dep_idx` (`parent_dep` ASC),
  CONSTRAINT `dep_emp`
    FOREIGN KEY (`mgr`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `dep_dep`
    FOREIGN KEY (`parent_dep`)
    REFERENCES `HRAS`.`com_department` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`com_post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`com_post` (
  `id` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '岗位ID',
  `name` VARCHAR(40) NOT NULL COMMENT '岗位名',
  `level` INT(3) NOT NULL COMMENT '岗位级别',
  `post_salary` INT NOT NULL COMMENT '岗位薪资',
  `type` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '岗位类型(字典)',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `post_dict_idx` (`type` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `post_dict`
    FOREIGN KEY (`type`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`com_posting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`com_posting` (
  `id` INT(10) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '在职编号',
  `emp_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '员工ID(外键)',
  `dep_id` INT(4) UNSIGNED ZEROFILL NOT NULL,
  `post_id` INT UNSIGNED ZEROFILL NOT NULL COMMENT '岗位ID(外键)',
  `status` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '在职状态(字典)',
  PRIMARY KEY (`id`),
  INDEX `posting_post_idx` (`post_id` ASC),
  INDEX `posting_dict_idx` (`status` ASC),
  INDEX `posting_dep_idx` (`dep_id` ASC),
  CONSTRAINT `posting_emp`
    FOREIGN KEY (`emp_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `posting_post`
    FOREIGN KEY (`post_id`)
    REFERENCES `HRAS`.`com_post` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `posting_dict`
    FOREIGN KEY (`status`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `posting_dep`
    FOREIGN KEY (`dep_id`)
    REFERENCES `HRAS`.`com_department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`com_plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`com_plan` (
  `id` INT(10) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '招聘计划ID',
  `status` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '招聘计划状态',
  `post_id` INT UNSIGNED ZEROFILL NOT NULL COMMENT '岗位ID(外键)',
  `dep_id` INT(4) UNSIGNED ZEROFILL NOT NULL COMMENT '部门ID(外键)',
  `expect_num` INT UNSIGNED NOT NULL COMMENT '需求量',
  `finished_num` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '已完成数量',
  `time_start` DATE NOT NULL COMMENT '开始时间',
  `time_end` DATE NOT NULL COMMENT '结束时间',
  `time_create` TIMESTAMP NOT NULL COMMENT '创建时间',
  `creator_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '创建人ID(外键)',
  `host_id` INT(10) UNSIGNED ZEROFILL NULL COMMENT '负责人ID(外键)',
  PRIMARY KEY (`id`),
  INDEX `plan_dict_idx` (`status` ASC),
  INDEX `plan_post_idx` (`post_id` ASC),
  INDEX `plan_dep_idx` (`dep_id` ASC),
  INDEX `plan_emp_idx` (`creator_id` ASC),
  INDEX `plan_host_idx` (`host_id` ASC),
  CONSTRAINT `plan_dict`
    FOREIGN KEY (`status`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `plan_post`
    FOREIGN KEY (`post_id`)
    REFERENCES `HRAS`.`com_post` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `plan_dep`
    FOREIGN KEY (`dep_id`)
    REFERENCES `HRAS`.`com_department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `plan_creator`
    FOREIGN KEY (`creator_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `plan_host`
    FOREIGN KEY (`host_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`log_post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`log_post` (
  `id` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '任职记录ID',
  `emp_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '员工ID(外键)',
  `post_type` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '任职类型(字典)',
  `from_dep_id` INT(4) UNSIGNED ZEROFILL NULL COMMENT '调离部门ID(外键)',
  `to_dep_id` INT(4) UNSIGNED ZEROFILL NULL COMMENT '调任部门(外键)',
  `from_post_id` INT UNSIGNED ZEROFILL NULL COMMENT '调离岗位ID(外键)',
  `to_post_id` INT UNSIGNED ZEROFILL NULL COMMENT '调任岗位ID(外键)',
  `applicant_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '申请人ID(外键)',
  `reviewer_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '审核人ID(外键)',
  `plan_id` INT(10) UNSIGNED ZEROFILL NULL COMMENT '所属招聘计划ID(外键)',
  `post_time` TIMESTAMP NOT NULL COMMENT '变动时间',
  `post_info` VARCHAR(100) NOT NULL DEFAULT '无' COMMENT '变动信息',
  PRIMARY KEY (`id`),
  INDEX `log_post_emp_idx` (`emp_id` ASC),
  INDEX `log_post_post_idx` (`from_post_id` ASC),
  INDEX `log_post_dep_idx` (`from_dep_id` ASC),
  INDEX `log_post_plan_idx` (`plan_id` ASC),
  INDEX `log_post_type_idx` (`post_type` ASC),
  INDEX `log_post_aplicant_idx` (`applicant_id` ASC),
  INDEX `log_post_reviewer_idx` (`reviewer_id` ASC),
  INDEX `log_post_post_to_idx` (`to_post_id` ASC),
  INDEX `log_post_dep_to_idx` (`to_dep_id` ASC),
  CONSTRAINT `log_post_emp`
    FOREIGN KEY (`emp_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_post_from`
    FOREIGN KEY (`from_post_id`)
    REFERENCES `HRAS`.`com_post` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_dep_from`
    FOREIGN KEY (`from_dep_id`)
    REFERENCES `HRAS`.`com_department` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_plan`
    FOREIGN KEY (`plan_id`)
    REFERENCES `HRAS`.`com_plan` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_type`
    FOREIGN KEY (`post_type`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `log_post_aplicant`
    FOREIGN KEY (`applicant_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_reviewer`
    FOREIGN KEY (`reviewer_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_post_to`
    FOREIGN KEY (`to_post_id`)
    REFERENCES `HRAS`.`com_post` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `log_post_dep_to`
    FOREIGN KEY (`to_dep_id`)
    REFERENCES `HRAS`.`com_department` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`log_attendence`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`log_attendence` (
  `id` INT(15) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '出勤记录ID',
  `date` TIMESTAMP NOT NULL COMMENT '考勤时间',
  `emp_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '考勤员工',
  `type` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '考勤类型(字典)',
  `log_time` TIME NOT NULL COMMENT '登录时间',
  PRIMARY KEY (`id`),
  INDEX `attendence_emp_idx` (`emp_id` ASC),
  INDEX `attendece_type_idx` (`type` ASC),
  CONSTRAINT `attendence_emp`
    FOREIGN KEY (`emp_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `attendece_type`
    FOREIGN KEY (`type`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`log_login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`log_login` (
  `id` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '登录记录ID',
  `emp_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '登录员工ID',
  `ip` VARCHAR(30) NOT NULL COMMENT '登录IP',
  `login_time` TIME NOT NULL COMMENT '登录时间',
  `logout_time` TIME NOT NULL COMMENT '断开时间',
  `is_admin` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `login_emp_idx` (`emp_id` ASC),
  CONSTRAINT `login_emp`
    FOREIGN KEY (`emp_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`admin_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`admin_info` (
  `id` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '管理员ID',
  `emp_id` INT(10) UNSIGNED ZEROFILL NOT NULL COMMENT '管理员员工ID',
  `admin_password` VARCHAR(32) NOT NULL COMMENT '管理员密码',
  UNIQUE INDEX `emp_id_UNIQUE` (`emp_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `admin_emp`
    FOREIGN KEY (`emp_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HRAS`.`log_issue`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`log_issue` (
  `id` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` INT(10) UNSIGNED ZEROFILL NOT NULL,
  `subject` VARCHAR(40) NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `contact` VARCHAR(11) NOT NULL,
  `content` VARCHAR(140) NULL,
  `status` INT(10) UNSIGNED ZEROFILL NOT NULL,
  `processor_id` INT(10) UNSIGNED ZEROFILL NULL,
  `time_submit` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `issue_dict_idx` (`type` ASC),
  INDEX `issue_emp_idx` (`processor_id` ASC),
  INDEX `issue_dict_status_idx` (`status` ASC),
  CONSTRAINT `issue_dict_type`
    FOREIGN KEY (`type`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `issue_emp`
    FOREIGN KEY (`processor_id`)
    REFERENCES `HRAS`.`emp_info` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `issue_dict_status`
    FOREIGN KEY (`status`)
    REFERENCES `HRAS`.`dict_info` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `HRAS` ;

-- -----------------------------------------------------
-- Placeholder table for view `HRAS`.`view_emp_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`view_emp_info` (`emp_id` INT, `emp_name` INT, `post_name` INT, `dep_name` INT, `title_name` INT, `email` INT, `phone_number` INT, `birthday` INT, `time_register` INT, `political_value` INT, `health_value` INT);

-- -----------------------------------------------------
-- Placeholder table for view `HRAS`.`view_dep_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HRAS`.`view_dep_info` (`dep_id` INT, `dep_name` INT, `mgr_name` INT, `addr` INT, `info` INT, `parent_dep_name` INT);

-- -----------------------------------------------------
-- View `HRAS`.`view_emp_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HRAS`.`view_emp_info`;
USE `HRAS`;
CREATE  OR REPLACE ALGORITHM = MERGE VIEW `view_emp_info` AS
SELECT emp_info.id AS emp_id, emp_info.name AS emp_name, com_post.name AS post_name, com_department.name AS dep_name, emp_title.name AS title_name, emp_info.email, emp_info.phone_number, emp_info.birthday, emp_info.time_register, dict_info_1.value AS political_value, dict_info_2.value AS health_value
FROM emp_info, com_department, com_post, emp_title, com_posting, dict_info AS dict_info_1, dict_info AS dict_info_2
WHERE emp_info.id = com_posting.emp_id AND emp_info.dep_id=com_department.id AND emp_info.title=emp_title.id AND emp_info.political=dict_info_1.id AND emp_info.health=dict_info_2.id AND com_posting.post_id=com_post.id
WITH CASCADED CHECK OPTION;

-- -----------------------------------------------------
-- View `HRAS`.`view_dep_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HRAS`.`view_dep_info`;
USE `HRAS`;
CREATE  OR REPLACE VIEW `view_dep_info` AS
SELECT dep1.id AS dep_id, dep1.name AS dep_name, emp_info.name AS mgr_name, dep1.addr, dep1.info, dep2.name AS parent_dep_name
FROM com_department AS dep1, com_department AS dep2, emp_info
WHERE dep1.parent_dep=dep2.id AND dep1.mgr=emp_info.id
WITH CASCADED CHECK OPTION;
CREATE USER 'hr_system' IDENTIFIED BY 'nmklp666';

GRANT SELECT ON TABLE `HRAS`.* TO 'hr_system';
GRANT SHOW VIEW, SELECT ON TABLE `HRAS`.`view_dep_info` TO 'hr_system';
GRANT SHOW VIEW, INSERT ON TABLE `HRAS`.`view_emp_info` TO 'hr_system';
CREATE USER 'admins' IDENTIFIED BY 'nmklp666+';

GRANT ALL ON `HRAS`.* TO 'admins';
GRANT ALL ON TABLE `HRAS`.`view_dep_info` TO 'admins';
GRANT ALL ON TABLE `HRAS`.`view_emp_info` TO 'admins';
CREATE USER 'visitor' IDENTIFIED BY 'nmklp666';

grant select on HRAS.com_department to hr_system@'localhost';
grant select on HRAS.com_plan to hr_system@'localhost';
grant select on HRAS.com_post to hr_system@'localhost';
grant select on HRAS.com_posting to hr_system@'localhost';
grant select on HRAS.dict_info to hr_system@'localhost';
grant select on HRAS.dict_type to hr_system@'localhost';
grant select on HRAS.emp_info to hr_system@'localhost';
grant select on HRAS.emp_title to hr_system@'localhost';
grant select, insert  on HRAS.log_attendence to hr_system@'localhost';
grant select on HRAS.log_login to hr_system@'localhost';
grant select on HRAS.log_post to hr_system@'localhost';

grant insert on HRAS.log_issue to visitor@'localhost';

grant show view on HRAS.view_dep_info to hr_system@'localhost';
grant show view on HRAS.view_emp_info to hr_system@'localhost';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
